apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scalar-ledger.fullname" . }}
  labels:
{{ include "scalar-ledger.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "scalar-ledger.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: scalar-ledger
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "scalar-ledger.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: scalar-ledger
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - configMap:
          defaultMode: 493
          name: {{ include "scalar-ledger.fullname" . }}
        name: scalar-ledger-config
      {{- if .Values.initContainer.enabled }}
      initContainers:
      - name: cassandra-load-keyspace
        image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
        imagePullPolicy: "{{ .Values.initContainer.image.pullPolicy }}"
        volumeMounts:
        - mountPath: /init.cql
          name: scalar-ledger-config
          subPath: init.cql
        env:
        - name: SCALAR_DB_CONTACT_POINTS
          value: "{{ .Values.cassandra.host }}"
        - name: SCALAR_DB_CONTACT_PORT
          value: "{{ .Values.cassandra.port }}"
        - name: SCALAR_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "scalar-ledger.fullname" . }}
              key: cassandra-user
        - name: SCALAR_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "scalar-ledger.fullname" . }}
              key: cassandra-password
        command:
        - /bin/bash 
        - -c 
        - "sleep {{ .Values.initContainer.waitCassandra }} && echo loading cassandra keyspace && cqlsh ${SCALAR_DB_CONTACT_POINTS} -u ${SCALAR_DB_USERNAME} -p ${SCALAR_DB_PASSWORD} -f /init.cql"
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
          - name: SCALAR_DB_CONTACT_POINTS
            value: "{{ .Values.cassandra.host }}"
          - name: SCALAR_DB_CONTACT_PORT
            value: "{{ .Values.cassandra.port }}"
          - name: SCALAR_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "scalar-ledger.fullname" . }}
                key: cassandra-user
          - name: SCALAR_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "scalar-ledger.fullname" . }}
                key: cassandra-password
          - name: SCALAR_DL_LEDGER_LOG_LEVEL
            value: "INFO"
          ports:
          - containerPort: 50051
            name: scalar-dl
            protocol: TCP
          - containerPort: 50052
            name: scalar-dl-priv
            protocol: TCP
          - containerPort: 50053
            name: scalar-dl-admin
            protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
